{"version":3,"sources":["../node_modules/scramjet-core/lib sync","CryptoWebApp/PriceCalculators/BTCprice.jsx","CryptoWebApp/site/nav.jsx","CryptoWebApp/site/ticker-element.jsx","CryptoWebApp/site/ticker-bar.jsx","CryptoWebApp/CryptoWebApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","require","React","Component","Navigation","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","className","href","Toggle","Collapse","Nav","Link","TickerElement","props","state","price","priceId","ticker","Math","random","updatePrice","bind","console","log","this","socket","WebSocket","toLowerCase","onmessage","event","newClose","JSON","parse","data","k","c","Number","parseFloat","toFixed","display","document","getElementById","style","color","setTimeout","setState","boxStyle","backgroundColor","marginBottom","width","border","margin","PricingBox","padding","pauseOnHover","gradient","CryptoWebApp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.11a0b7ac.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 118;","import React from 'react';\nimport { createChart } from 'lightweight-charts'\nimport Ticker from 'react-ticker'\n\n\nrequire(\"scramjet\")\n\nconst API_KEY = 'SC9476BN3E2GJVGR'\n\nexport default class BTCPrice extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            BTCclose: \"0\",\n        }\n        // this.updateBTCPrice = this.updateBTCPrice.bind(this);\n\n    }\n\n    // updateBTCPrice(event, chart, candlesticks) {\n    //     let messageObject = JSON.parse(event.data);\n    //     let newClose = messageObject.k.c;\n\n\n        // const display = document.getElementById(\"BTCpriceDisplay\")\n        // if (newClose > this.state.BTCclose) {\n        //     display.style.color = \"#40a35a\";\n        //     setTimeout(() => display.style.color = \"black\", 750)\n        // }\n        // if (newClose < this.state.BTCclose) {\n        //     display.style.color = \"#ab3733\";\n        //     setTimeout(() => display.style.color = \"black\", 750)\n        // }\n\n    //     candlesticks.setData([\n    //         { time: messageObject.k.T, open: messageObject.k.o, high: messageObject.k.h, low: messageObject.k.l, close: messageObject.k.c },\n    //     ])\n\n    //     console.log(candlesticks.getData)\n\n\n    //     this.setState({\n    //         BTCclose: newClose\n    //     })\n    // }\n\n    componentDidMount() {\n\n        // WEB SOCKET STUFF, ONLY FOR REALTIME DATA\n\n        // const BTCsocket = new WebSocket(\"wss://stream.binance.com:9443/ws/btcusdt@kline_1m\");\n\n        // const chart = createChart(document.getElementById(\"BTCchart\"), { width: 400, height: 300 });\n        // const candlestickSeries = chart.addCandlestickSeries();\n\n        // BTCsocket.onmessage = (event) => {\n        //     this.updateBTCPrice(event, chart, candlestickSeries);\n        // }\n\n\n        let url = `https://www.alphavantage.co/query?function=DIGITAL_CURRENCY_DAILY&symbol=BTC&market=USD&apikey=${API_KEY}`;\n\n        fetch(url)\n            .then((res) => res.json())\n            .then((result) => console.log(result))\n\n    }\n\n    render() {\n\n        const chartStyle = {\n            margin: \"0% 40% 0%\",\n        }\n        \n        return (\n            <div>\n                <h1 id=\"BTCpriceDisplay\">BTC Price: US${this.state.BTCclose}</h1>\n                <div id=\"BTCchart\" style={chartStyle}></div>\n                <p></p>\n            </div >\n        )\n    }\n\n\n\n};","import React from 'react';\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './nav.css'\n\nexport default class Navigation extends React.Component {\n\n\n    render() {\n\n        const headerStyles = {\n            color: \"white\",\n            display: \"inline-flex\",\n            margin: \"10px\",\n            textDecoration: 'none',\n            justifyContent: 'space-around'\n        }\n\n        return (\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                <Container>\n                    <Navbar.Brand className=\"fontnav\" href=\"#home\">Crypto Web App</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\n                        <Nav className=\"me-auto\">\n\n                        </Nav>\n                        <Nav>\n                            <Nav.Link className=\"fontnav\" href=\"#deets\">Home</Nav.Link>\n                            <Nav.Link className=\"fontnav\" href=\"#deets\">Charts</Nav.Link>\n                            <Nav.Link className=\"fontnav\" href=\"#deets\">Trading Bot</Nav.Link>\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n\n        )\n    }\n\n}","import React from 'react';\n\nexport default class TickerElement extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n          price: 0,\n          priceId: `${this.props.ticker}display${Math.random()}` \n        }\n\n        this.updatePrice = this.updatePrice.bind(this); \n    }\n\n    componentDidMount() {\n      console.log(this.state.priceId)\n      const socket = new WebSocket(`wss://stream.binance.com:9443/ws/${this.props.ticker.toLowerCase()}usdt@kline_1m`);\n      console.log(socket)\n      socket.onmessage = (event) => { this.updatePrice(event); }\n    }\n\n    updatePrice(event) {\n      console.log('run')\n      let messageObject = JSON.parse(event.data);\n      let newClose = messageObject.k.c;\n      newClose = Number.parseFloat(newClose).toFixed(3);\n  \n      const display = document.getElementById(`${this.state.priceId}`)\n      if (newClose > this.state.price) {\n        display.style.color = \"#40a35a\";\n        setTimeout(() => display.style.color = \"white\", 750)\n      }\n      if (newClose < this.state.price) {\n        display.style.color = \"#ab3733\";\n        setTimeout(() => display.style.color = \"white\", 750)\n      }\n  \n      this.setState({\n        price: newClose\n      });\n    }\n\n    render() {\n\n        const boxStyle = {\n            backgroundColor: \"black\",\n            color: \"white\",\n            marginBottom: \"0px\",\n            // padding: \"20px 50px 20px 50px\",\n            width: \"200px\",\n            border: \"grey\",\n            margin: \"0px\",\n            border: \"1px solid black\",\n            fontSize: \"20px\",\n            textAlign: \"left\"\n          }\n        \n        \n\n        return (\n            <div style={boxStyle}>\n            <h6>{this.props.ticker}</h6>\n            <h4 id={this.state.priceId}>${this.state.price}</h4>\n          </div>\n        )\n    }\n\n}","import React, { useEffect, useState } from 'react'\nimport BTCPrice from '../PriceCalculators/BTCprice';\nimport Marquee from \"react-fast-marquee\";\nimport TickerElement from './ticker-element';\n\nexport default class PricingBox extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    \n  }\n\n  render() {\n    const boxStyle = {\n      backgroundColor: \"black\",\n      color: \"white\",\n      marginBottom: \"0px\",\n      padding: \"20px 50px 20px 50px\",\n      border: \"grey\",\n      margin: \"0px\",\n      border: \"1px solid black\",\n      fontSize: \"20px\",\n      textAlign: \"left\"\n    }\n\n    const tickerStyle = {\n      paddingBottom: '15px'\n    }\n\n    return (\n      <Marquee pauseOnHover={true} gradient={false}>\n\n        <TickerElement ticker=\"BTC\" />\n        <TickerElement ticker=\"ETH\" />\n        <TickerElement ticker=\"XRP\" />\n        <TickerElement ticker=\"ADA\" />\n        <TickerElement ticker=\"BNB\" />\n        <TickerElement ticker=\"SOL\" />\n        <TickerElement ticker=\"DOGE\" />\n        <TickerElement ticker=\"LTC\" />\n\n\n      </Marquee>\n\n\n    )\n  }\n}\n\n\n\n\n","import React from 'react';\nimport './CryptoWebApp.css'\n\n\nimport BTCPrice from './PriceCalculators/BTCprice';\nimport Navigation from './site/nav';\nimport PricingBox from './site/ticker-bar';\n\nexport default class CryptoWebApp extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <PricingBox></PricingBox>\n                <Navigation></Navigation>\n                {/* <BTCPrice></BTCPrice> */}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport CryptoWebApp from './CryptoWebApp/CryptoWebApp';\nimport TickerBar from './CryptoWebApp/site/ticker-bar';\nimport './App.css';\n\n\n\n\n// AlphaVantage API Key: SC9476BN3E2GJVGR\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       \n      <CryptoWebApp></CryptoWebApp>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}